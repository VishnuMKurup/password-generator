{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/password-generator/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Checkbox, FormControlLabel, Button, Typography, IconButton } from '@material-ui/core';\nimport { FileCopyOutlined } from '@material-ui/icons';\nimport './App.css'; // Ensure that you have this file in your project\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generatePassword = (length, includeUppercase, includeLowercase, includeNumbers, includeSymbols) => {\n  const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';\n  const numberChars = '0123456789';\n  const symbolChars = '!@#$%^&*()_-+=<>?/';\n  let characters = '';\n  if (includeUppercase) characters += uppercaseChars;\n  if (includeLowercase) characters += lowercaseChars;\n  if (includeNumbers) characters += numberChars;\n  if (includeSymbols) characters += symbolChars;\n  let password = '';\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    password += characters.charAt(randomIndex);\n  }\n  return password;\n};\nconst calculatePasswordStrength = password => {\n  const length = password.length;\n  let strength = 0;\n\n  // Check if password contains lowercase letters\n  const hasLowercase = /[a-z]/.test(password);\n  // Check if password contains uppercase letters\n  const hasUppercase = /[A-Z]/.test(password);\n  // Check if password contains numbers\n  const hasNumbers = /[0-9]/.test(password);\n  // Check if password contains symbols\n  const hasSymbols = /[!@#$%^&*()\\-_=+{};:,<.>]/.test(password);\n\n  // Add strength points based on presence of different character types\n  if (length >= 8 && length <= 12) {\n    strength += 1; // Increment strength for medium length\n  } else if (length > 12) {\n    strength += 2; // Increment strength for long length\n  }\n  if (hasLowercase) strength += 1;\n  if (hasUppercase) strength += 1;\n  if (hasNumbers) strength += 1;\n  if (hasSymbols) strength += 1;\n  return strength;\n};\nconst StrengthIndicator = ({\n  strength\n}) => {\n  let strengthLabel;\n  let indicatorColor;\n  let blockCount = 0; // Initialize block count\n\n  // Determine strength label and indicator color based on strength level\n  if (strength === 1) {\n    indicatorColor = '#ff5252'; // Red color for weak\n    strengthLabel = 'Weak';\n    blockCount = 2; // Weak: Highlight first 2 blocks\n  } else if (strength === 2) {\n    indicatorColor = '#ffa500'; // Orange color for medium\n    strengthLabel = 'Medium';\n    blockCount = 3; // Medium: Highlight first 3 blocks\n  } else {\n    indicatorColor = '#4caf50'; // Green color for strong\n    strengthLabel = 'Strong';\n    blockCount = 4; // Strong: Highlight all 4 blocks\n  }\n\n  // Generate an array of spans with appropriate styling\n  const blocks = Array.from({\n    length: 4\n  }).map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      backgroundColor: index < blockCount ? indicatorColor : '#fff'\n    }\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"strength-icon ml-1 flex items-center place-content-center flex-nowrap group\",\n    children: [blocks, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strength-label\",\n      children: strengthLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_c = StrengthIndicator;\nconst Notification = ({\n  message,\n  onClose\n}) => {\n  _s();\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      onClose();\n    }, 1000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [onClose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = Notification;\nfunction App() {\n  _s2();\n  const [passwordLength, setPasswordLength] = useState(12);\n  const [includeUppercase, setIncludeUppercase] = useState(true);\n  const [includeLowercase, setIncludeLowercase] = useState(true);\n  const [includeNumbers, setIncludeNumbers] = useState(true);\n  const [includeSymbols, setIncludeSymbols] = useState(true);\n  const [generatedPassword, setGeneratedPassword] = useState('');\n  const [passwordStrength, setPasswordStrength] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const handleGeneratePassword = () => {\n    const password = generatePassword(passwordLength, includeUppercase, includeLowercase, includeNumbers, includeSymbols);\n    setGeneratedPassword(password);\n    setPasswordStrength(calculatePasswordStrength(password));\n  };\n  const handleCopyToClipboard = () => {\n    // Copy to clipboard\n    navigator.clipboard.writeText(generatedPassword);\n\n    // Show notification\n    setNotification('Password copied to clipboard!');\n  };\n  const closeNotification = () => {\n    setNotification(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generated-password-container-top\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Generated Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), generatedPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generated-password-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: generatedPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleCopyToClipboard,\n          color: \"primary\",\n          \"aria-label\": \"Copy to Clipboard\",\n          children: /*#__PURE__*/_jsxDEV(FileCopyOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n          message: notification,\n          onClose: closeNotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-settings-container\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Password Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-range\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"25\",\n          value: passwordLength,\n          onChange: e => setPasswordLength(parseInt(e.target.value, 10))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"password-length\",\n          children: passwordLength\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: includeUppercase,\n            onChange: () => setIncludeUppercase(!includeUppercase),\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this),\n          label: \"Uppercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: includeLowercase,\n            onChange: () => setIncludeLowercase(!includeLowercase),\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this),\n          label: \"Lowercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: includeNumbers,\n            onChange: () => setIncludeNumbers(!includeNumbers),\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this),\n          label: \"Numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: includeSymbols,\n            onChange: () => setIncludeSymbols(!includeSymbols),\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this),\n          label: \"Symbols\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), generatedPassword &&\n      /*#__PURE__*/\n      // Show strength indicator only if a password is generated\n      _jsxDEV(\"div\", {\n        className: \"strength-indicator-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"STRENGTH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StrengthIndicator, {\n          strength: passwordStrength\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleGeneratePassword,\n        children: \"Generate Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"Lg20frShuI6QjYjg9gfQ/PwYfoI=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StrengthIndicator\");\n$RefreshReg$(_c2, \"Notification\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Checkbox","FormControlLabel","Button","Typography","IconButton","FileCopyOutlined","jsxDEV","_jsxDEV","generatePassword","length","includeUppercase","includeLowercase","includeNumbers","includeSymbols","uppercaseChars","lowercaseChars","numberChars","symbolChars","characters","password","i","randomIndex","Math","floor","random","charAt","calculatePasswordStrength","strength","hasLowercase","test","hasUppercase","hasNumbers","hasSymbols","StrengthIndicator","strengthLabel","indicatorColor","blockCount","blocks","Array","from","map","_","index","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","Notification","message","onClose","_s","timeout","setTimeout","clearTimeout","_c2","App","_s2","passwordLength","setPasswordLength","setIncludeUppercase","setIncludeLowercase","setIncludeNumbers","setIncludeSymbols","generatedPassword","setGeneratedPassword","passwordStrength","setPasswordStrength","notification","setNotification","handleGeneratePassword","handleCopyToClipboard","navigator","clipboard","writeText","closeNotification","variant","gutterBottom","onClick","color","type","min","max","value","onChange","e","parseInt","target","control","checked","label","_c3","$RefreshReg$"],"sources":["/Users/apple/Desktop/password-generator/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Checkbox,\n  FormControlLabel,\n  Button,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\nimport { FileCopyOutlined } from '@material-ui/icons';\nimport './App.css'; // Ensure that you have this file in your project\n\nconst generatePassword = (\n  length,\n  includeUppercase,\n  includeLowercase,\n  includeNumbers,\n  includeSymbols\n) => {\n  const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';\n  const numberChars = '0123456789';\n  const symbolChars = '!@#$%^&*()_-+=<>?/';\n\n  let characters = '';\n  if (includeUppercase) characters += uppercaseChars;\n  if (includeLowercase) characters += lowercaseChars;\n  if (includeNumbers) characters += numberChars;\n  if (includeSymbols) characters += symbolChars;\n\n  let password = '';\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    password += characters.charAt(randomIndex);\n  }\n\n  return password;\n};\n\nconst calculatePasswordStrength = (password) => {\n  const length = password.length;\n  let strength = 0;\n\n  // Check if password contains lowercase letters\n  const hasLowercase = /[a-z]/.test(password);\n  // Check if password contains uppercase letters\n  const hasUppercase = /[A-Z]/.test(password);\n  // Check if password contains numbers\n  const hasNumbers = /[0-9]/.test(password);\n  // Check if password contains symbols\n  const hasSymbols = /[!@#$%^&*()\\-_=+{};:,<.>]/.test(password);\n\n  // Add strength points based on presence of different character types\n  if (length >= 8 && length <= 12) {\n    strength += 1; // Increment strength for medium length\n  } else if (length > 12) {\n    strength += 2; // Increment strength for long length\n  }\n\n  if (hasLowercase) strength += 1;\n  if (hasUppercase) strength += 1;\n  if (hasNumbers) strength += 1;\n  if (hasSymbols) strength += 1;\n\n  return strength;\n};\n\n\nconst StrengthIndicator = ({ strength }) => {\n  let strengthLabel;\n  let indicatorColor;\n  let blockCount = 0; // Initialize block count\n\n  // Determine strength label and indicator color based on strength level\n  if (strength === 1) {\n    indicatorColor = '#ff5252'; // Red color for weak\n    strengthLabel = 'Weak';\n    blockCount = 2; // Weak: Highlight first 2 blocks\n  } else if (strength === 2) {\n    indicatorColor = '#ffa500'; // Orange color for medium\n    strengthLabel = 'Medium';\n    blockCount = 3; // Medium: Highlight first 3 blocks\n  } else {\n    indicatorColor = '#4caf50'; // Green color for strong\n    strengthLabel = 'Strong';\n    blockCount = 4; // Strong: Highlight all 4 blocks\n  }\n\n  // Generate an array of spans with appropriate styling\n  const blocks = Array.from({ length: 4 }).map((_, index) => (\n    <span\n      key={index}\n      style={{ backgroundColor: index < blockCount ? indicatorColor : '#fff' }}\n    ></span>\n  ));\n\n  return (\n    <div className=\"strength-icon ml-1 flex items-center place-content-center flex-nowrap group\">\n      {blocks}\n      <div className=\"strength-label\">{strengthLabel}</div>\n    </div>\n  );\n};\n\n\nconst Notification = ({ message, onClose }) => {\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      onClose();\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [onClose]);\n\n  return (\n    <div className=\"notification-container\">\n      <div className=\"notification\">{message}</div>\n    </div>\n  );\n};\n\nfunction App() {\n  const [passwordLength, setPasswordLength] = useState(12);\n  const [includeUppercase, setIncludeUppercase] = useState(true);\n  const [includeLowercase, setIncludeLowercase] = useState(true);\n  const [includeNumbers, setIncludeNumbers] = useState(true);\n  const [includeSymbols, setIncludeSymbols] = useState(true);\n  const [generatedPassword, setGeneratedPassword] = useState('');\n  const [passwordStrength, setPasswordStrength] = useState(null);\n  const [notification, setNotification] = useState(null);\n\n  const handleGeneratePassword = () => {\n    const password = generatePassword(\n      passwordLength,\n      includeUppercase,\n      includeLowercase,\n      includeNumbers,\n      includeSymbols\n    );\n    setGeneratedPassword(password);\n    setPasswordStrength(calculatePasswordStrength(password));\n  };\n\n  const handleCopyToClipboard = () => {\n    // Copy to clipboard\n    navigator.clipboard.writeText(generatedPassword);\n\n    // Show notification\n    setNotification('Password copied to clipboard!');\n  };\n\n  const closeNotification = () => {\n    setNotification(null);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"generated-password-container-top\">\n        <Typography variant=\"h6\" gutterBottom>\n          Generated Password\n        </Typography>\n        {generatedPassword && (\n          <div className=\"generated-password-box\">\n            <span>{generatedPassword}</span>\n            <IconButton\n              onClick={handleCopyToClipboard}\n              color=\"primary\"\n              aria-label=\"Copy to Clipboard\"\n            >\n              <FileCopyOutlined />\n            </IconButton>\n            {notification && (\n              <Notification message={notification} onClose={closeNotification} />\n            )}\n          </div>\n        )}\n      </div>\n\n      <div className=\"password-settings-container\">\n        <Typography variant=\"h4\" gutterBottom>\n          Password Settings\n        </Typography>\n        <div className='password-range'>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"25\"\n            value={passwordLength}\n            onChange={(e) => setPasswordLength(parseInt(e.target.value, 10))}\n          />\n          <span className='password-length'>{passwordLength}</span>\n        </div>\n        <div className=\"input-container\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={includeUppercase}\n                onChange={() => setIncludeUppercase(!includeUppercase)}\n                color=\"secondary\"\n              />\n            }\n            label=\"Uppercase\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={includeLowercase}\n                onChange={() => setIncludeLowercase(!includeLowercase)}\n                color=\"secondary\"\n              />\n            }\n            label=\"Lowercase\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={includeNumbers}\n                onChange={() => setIncludeNumbers(!includeNumbers)}\n                color=\"secondary\"\n              />\n            }\n            label=\"Numbers\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={includeSymbols}\n                onChange={() => setIncludeSymbols(!includeSymbols)}\n                color=\"secondary\"\n              />\n            }\n            label=\"Symbols\"\n          />\n        </div>\n        {generatedPassword && ( // Show strength indicator only if a password is generated\n          <div className=\"strength-indicator-wrap\">\n            <span>STRENGTH</span>\n            <StrengthIndicator strength={passwordStrength} />\n          </div>\n        )}\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleGeneratePassword}\n        >\n          Generate Password\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}